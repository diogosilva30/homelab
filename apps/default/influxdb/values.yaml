clusterDomain: lab.local
image:
  registry: docker.io
  repository: bitnami/influxdb
  tag: 2.7.11-debian-12-r1
  digest: ""
  ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
  ##
  pullPolicy: IfNotPresent
  pullSecrets: []
  debug: false
## Authentication parameters
##
auth:
  enabled: false
  usePasswordFiles: false
  admin:
    username: admin
    password: "admin"
    token: ""
    org: primary
    bucket: primary
    retention: ""
  ## @param auth.createUserToken Whether to create tokens for the different users. Take into account these tokens are going to be created by CLI randomly and they will not be accessible from a secret. See more influxdb 2.0 [auth ref](https://docs.influxdata.com/influxdb/v2.0/security/tokens/)
  ## You should take into account these tokens are going to be created by CLI
  ## so it is not possible to get them by k8s secrets nor to provide them though
  ## values
  ## See more influxdb 2.0 auth ref: https://docs.influxdata.com/influxdb/v2.0/security/tokens/
  ##
  createUserToken: false
  ## InfluxDB&trade; credentials for user with 'admin' privileges on the db specified at 'database' parameter
  ##
  user:
    ## @param auth.user.username Name for InfluxDB&trade; user with 'admin' privileges on the bucket specified at `auth.user.bucket` and `auth.user.org` or `auth.admin.org`
    ##
    username: ""
    ## @param auth.user.password InfluxDB&trade; password for `user.name` user
    ##
    password: ""
    ## @param auth.user.org Org to be created on first run
    ##
    org: ""
    ## @param auth.user.bucket Bucket to be created on first run
    ## already create. If it is not null a new bucket will be created.
    ##
    bucket: ""
  ## InfluxDB&trade; credentials for user with 'read' privileges on the db specified at 'database' parameter
  ## @param auth.readUser.username Name for InfluxDB&trade; user with 'read' privileges on the bucket specified at `auth.user.bucket`
  ## @param auth.readUser.password InfluxDB&trade; password for `auth.readUser.username` user
  ##
  readUser:
    username: ""
    password: ""
  ## InfluxDB&trade; credentials for user with 'write' privileges on the db specified at 'database' parameter
  ## @param auth.writeUser.username Name for InfluxDB&trade; user with 'read' privileges on the bucket specified at `auth.user.bucket`
  ## @param auth.writeUser.password InfluxDB&trade; password for `auth.writeUser.username` user
  ##
  writeUser:
    username: ""
    password: ""
  ## @param auth.existingSecret Name of existing Secret object with InfluxDB&trade; credentials (`auth.admin.password`, `auth.user.password`, `auth.readUser.password`, and `auth.writeUser.password` will be ignored and picked up from this secret)
  ##
  existingSecret: ""
## InfluxDB&trade; backend parameters
##
influxdb:
  ## @param influxdb.configuration Specify content for influxdb.conf
  ## Alternatively, you can put your config.yaml under the files/conf/ directory
  ##
  ## configuration: |-
  ##   reporting-disabled: true
  ##   http-bind-address: "127.0.0.1:8086"
  ##   ...
  ##
  configuration: ""
  ## @param influxdb.existingConfiguration Name of existing ConfigMap object with the InfluxDB&trade; configuration (`influxdb.configuration` will be ignored).
  ##
  existingConfiguration: ""
  ## @param influxdb.initdbScripts Dictionary of initdb scripts
  ## Alternatively, you can put your scripts under the files/docker-entrypoint-initdb.d directory
  ##
  ## initdbScripts:
  ##   my_init_script.sh: |
  ##      #!/bin/sh
  ##      echo "Do something."
  initdbScripts: {}
  ## @param influxdb.initdbScriptsCM Name of existing ConfigMap object with the initdb scripts (`influxdb.initdbScripts` will be ignored).
  ##
  initdbScriptsCM: ""
  ## @param influxdb.initdbScriptsSecret Secret with initdb scripts that contain sensitive information (Note: can be used with `initdbScriptsConfigMap` or `initdbScripts`)
  ##
  initdbScriptsSecret: ""
  ## @param influxdb.podAffinityPreset InfluxDB&trade; Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param influxdb.podAntiAffinityPreset InfluxDB&trade; Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node affinity preset
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param influxdb.nodeAffinityPreset.type InfluxDB&trade; Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    type: ""
    ## @param influxdb.nodeAffinityPreset.key InfluxDB&trade; Node label key to match Ignored if `affinity` is set.
    ## E.g.
    ## key: "kubernetes.io/e2e-az-name"
    ##
    key: ""
    ## @param influxdb.nodeAffinityPreset.values InfluxDB&trade; Node label values to match. Ignored if `affinity` is set.
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param influxdb.affinity InfluxDB&trade; Affinity for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
  ##
  affinity: {}
  ## @param influxdb.nodeSelector InfluxDB&trade; Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param influxdb.tolerations InfluxDB&trade; Tolerations for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param influxdb.podAnnotations Annotations for InfluxDB&trade; pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param influxdb.podLabels Extra labels for InfluxDB&trade; pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param influxdb.automountServiceAccountToken Mount Service Account token in pod
  ##
  automountServiceAccountToken: false
  ## @param influxdb.hostAliases InfluxDB&trade; pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param influxdb.updateStrategy.type InfluxDB&trade; statefulset/deployment strategy type
  ## Statefulset ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ## Deployment ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param influxdb.priorityClassName InfluxDB&trade; pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param influxdb.schedulerName Name of the k8s scheduler (other than default)
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param influxdb.topologySpreadConstraints Topology Spread Constraints for pod assignment
  ## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  ## The value is evaluated as a template
  ##
  topologySpreadConstraints: []
  ## @param influxdb.podManagementPolicy podManagementPolicy to manage scaling operation of InfluxDB&trade; pods
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
  ##
  podManagementPolicy: OrderedReady
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param influxdb.podSecurityContext.enabled Enabled InfluxDB&trade; pods' Security Context
  ## @param influxdb.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param influxdb.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param influxdb.podSecurityContext.supplementalGroups Set filesystem extra groups
  ## @param influxdb.podSecurityContext.fsGroup Set InfluxDB&trade; pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param influxdb.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param influxdb.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param influxdb.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param influxdb.containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup
  ## @param influxdb.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param influxdb.containerSecurityContext.privileged Set container's Security Context privileged
  ## @param influxdb.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param influxdb.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param influxdb.containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param influxdb.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: {}
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## InfluxDB&trade; pods' resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param influxdb.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if influxdb.resources is set (influxdb.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "nano"
  ## @param influxdb.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## @param influxdb.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param influxdb.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param influxdb.lifecycleHooks for the InfluxDB&trade; container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param influxdb.extraEnvVars Array containing extra env vars to configure InfluxDB&trade;
  ## For example:
  ## extraEnvVars:
  ##  - name: INFLUXDB_DATA_QUERY_LOG_ENABLED
  ##    value: "true"
  ##
  extraEnvVars: []
  ## @param influxdb.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for InfluxDB&trade; nodes
  ##
  extraEnvVarsCM: ""
  ## @param influxdb.extraEnvVarsSecret Name of existing Secret containing extra env vars for InfluxDB&trade; nodes
  ##
  extraEnvVarsSecret: ""
  ## @param influxdb.extraVolumes Array of extra volumes to be added to the deployment (evaluated as template). Requires setting extraVolumeMounts
  ##
  extraVolumes: []
  ## @param influxdb.extraVolumeMounts Array of extra volume mounts to be added to the container (evaluated as template). Normally used with extraVolumes.
  ##
  extraVolumeMounts: []
  ## @param influxdb.containerPorts.http InfluxDB&trade; container HTTP port
  ## @param influxdb.containerPorts.rpc InfluxDB&trade; container RPC port
  ##
  containerPorts:
    http: 8086
    rpc: 8088
  ## Configure extra options for InfluxDB&trade; containers' liveness, readiness and startup probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  ## @param influxdb.startupProbe.enabled Enable startupProbe
  ## @param influxdb.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param influxdb.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param influxdb.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param influxdb.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param influxdb.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 180
    periodSeconds: 45
    timeoutSeconds: 30
    successThreshold: 1
    failureThreshold: 6
  ## @param influxdb.livenessProbe.enabled Enable livenessProbe
  ## @param influxdb.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param influxdb.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param influxdb.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param influxdb.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param influxdb.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 180
    periodSeconds: 45
    timeoutSeconds: 30
    successThreshold: 1
    failureThreshold: 6
  ## @param influxdb.readinessProbe.enabled Enable readinessProbe
  ## @param influxdb.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param influxdb.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param influxdb.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param influxdb.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param influxdb.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 45
    timeoutSeconds: 30
    successThreshold: 1
    failureThreshold: 6
  ## @param influxdb.customStartupProbe Override default startup probe
  ##
  customStartupProbe: {}
  ## @param influxdb.customLivenessProbe Override default liveness probe
  ##
  customLivenessProbe: {}
  ## @param influxdb.customReadinessProbe Override default readiness probe
  ##
  customReadinessProbe: {}
  ## @param influxdb.sidecars Add additional sidecar containers to the InfluxDB&trade; pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param influxdb.initContainers Add additional init containers to the InfluxDB&trade; pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
  ## @param influxdb.pdb.create Enable/disable a Pod Disruption Budget creation
  ## @param influxdb.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param influxdb.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `influxdb.pdb.minAvailable` and `influxdb.pdb.maxUnavailable` are empty.
  ##
  pdb:
    create: true
    minAvailable: ""
    maxUnavailable: ""
  ## Service parameters
  ##
  service:
    ## @param influxdb.service.type Kubernetes service type (`ClusterIP`, `NodePort` or `LoadBalancer`)
    ##
    type: ClusterIP
    ## @param influxdb.service.ports.http InfluxDB&trade; HTTP port
    ## @param influxdb.service.ports.rpc InfluxDB&trade; RPC port
    ##
    ports:
      http: 8086
      rpc: 8088
    ## @param influxdb.service.nodePorts [object] Specify the nodePort(s) value for the LoadBalancer and NodePort service types.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    nodePorts:
      http: ""
      rpc: ""
    ## @param influxdb.service.loadBalancerIP loadBalancerIP if service type is `LoadBalancer`
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    loadBalancerIP: ""
    ## @param influxdb.service.loadBalancerSourceRanges Address that are allowed when service is LoadBalancer
    ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ##
    ## loadBalancerSourceRanges:
    ## - 10.10.10.0/24
    loadBalancerSourceRanges: []
    ## @param influxdb.service.clusterIP Static clusterIP or None for headless services
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#choosing-your-own-ip-address
    ## e.g:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param influxdb.service.externalTrafficPolicy InfluxDB&trade; service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param influxdb.service.extraPorts Extra ports to expose (normally used with the `sidecar` value)
    ##
    extraPorts: []
    ## @param influxdb.service.annotations Annotations for InfluxDB&trade; service
    ##
    annotations: {}
    ## @param influxdb.service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
    ## If "ClientIP", consecutive client requests will be directed to the same Pod
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    ##
    sessionAffinity: None
    ## @param influxdb.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    sessionAffinityConfig: {}
## @section InfluxDB Collectd&trade; parameters
collectd:
  ## @param collectd.enabled InfluxDB Collectd&trade; service enable
  ##
  enabled: false
  service:
    ## @param collectd.service.type Kubernetes service type (`ClusterIP`, `NodePort` or `LoadBalancer`)
    ##
    type: ClusterIP
    ## @param collectd.service.port InfluxDB Collectd&trade; UDP port (should match with corresponding port in influxdb.conf)
    ## This requires corresponding configuration in influxdb.conf to enable
    ## collectd block
    ##
    port: 25826
    ## @param collectd.service.nodePort Kubernetes HTTP node port
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    nodePort: ""
    ## @param collectd.service.loadBalancerIP loadBalancerIP if service type is `LoadBalancer`
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    loadBalancerIP: ""
    ## @param collectd.service.loadBalancerSourceRanges Address that are allowed when service is LoadBalancer
    ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ##
    ## loadBalancerSourceRanges:
    ## - 10.10.10.0/24
    loadBalancerSourceRanges: []
    ## @param collectd.service.clusterIP Static clusterIP or None for headless services
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#choosing-your-own-ip-address
    ## e.g:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param collectd.service.externalTrafficPolicy InfluxDB Collectd&trade; service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param collectd.service.extraPorts Extra ports to expose (normally used with the `sidecar` value)
    ##
    extraPorts: []
    ## @param collectd.service.annotations Annotations for InfluxDB Collectd&trade; service
    ##   metallb.universe.tf/allow-shared-ip: "true"
    ##
    annotations: {}
    ## @param collectd.service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
    ## If "ClientIP", consecutive client requests will be directed to the same mongos Pod
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    ##
    sessionAffinity: None
    ## @param collectd.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}
## @section Exposing parameters

## Prometheus metrics
## ref: https://docs.influxdata.com/influxdb/v1.7/administration/server_monitoring/#influxdb-metrics-http-endpoint
##
metrics:
  ## @param metrics.enabled Enable the export of Prometheus metrics
  ##
  enabled: true
  serviceMonitor:
    enabled: true

## Persistence parameters
##
persistence:
  ## @param persistence.enabled Enable data persistence
  ##
  enabled: true
  ## @param persistence.existingClaim Use a existing PVC which must be created manually before bound
  ## If defined, PVC must be created manually before volume will be bound
  ## The value is evaluated as a template
  ##
  existingClaim: ""
  ## @param persistence.storageClass Specify the `storageClass` used to provision the volume
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ## set, choosing the default provisioner.
  ##
  storageClass: ""
  ## @param persistence.accessModes Access mode of data volume
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size Size of data volume
  ##
  size: 16Gi
  ## @param persistence.annotations Persistent Volume Claim annotations
  ##
  annotations: {}
